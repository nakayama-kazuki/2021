' ------------------------------------------------------------------------------
' 1. open pptx
' 2. alt + F11
' 3. insert standard module
' 4. paste this script & edit it
' 5. exec macro (F5)
'   5.1 remove all Hidden slide
'   5.2 remove all msoMedia ( and add media name to note )
'   5.3 compress all msoPicture using export + import
'     COMPRESS_PRECISE : display size (point) * this value, as width & height
'     COMPRESS_FORMAT : if many photos in pptx, ppShapeFormatJPG is recommended
' ------------------------------------------------------------------------------

Public Const NOTE_SHAPE_IX As Long = 2
Public Const PATH_SEPARATOR As String = "\"

Public Const COMPRESS_PRECISE As Long = 4
Public Const COMPRESS_FORMAT As Long = ppShapeFormatGIF
'Public Const COMPRESS_FORMAT As Long = ppShapeFormatJPG

Sub ungroup(in_obj As Shape)
	Dim i As Long
	If in_obj.Type = msoGroup Then
		Dim groupItems As ShapeRange
		Set groupItems = in_obj.Ungroup
		For i = groupItems.Count To 1 Step -1
			Call ungroup(groupItems(i))
		Next i
	End If
End Sub

Sub addNote(in_slide As Slide, in_text As String)
	Dim shape As Shape
	Set shape = in_slide.NotesPage.Shapes(NOTE_SHAPE_IX)
	shape.TextFrame.TextRange.Text = in_text & vbCrLf & shape.TextFrame.TextRange.Text
End Sub

Sub handleMedias(in_slide As Slide)
	Dim i As Long
	Dim shape As Shape
	For i = in_slide.Shapes.Count To 1 Step -1
		Set shape = in_slide.Shapes(i)
		If shape.Type = msoMedia Then
			Call addNote(in_slide, "( removed : " & shape.Name & " )")
			Call shape.Delete()
		ElseIf shape.Type = msoPicture Then
			Dim tmpPath As String
			Dim added As Shape
			tmpPath = Environ("TEMP") & PATH_SEPARATOR & "temp.bin"
			Call shape.Export( _
				tmpPath, COMPRESS_FORMAT, shape.Width * COMPRESS_PRECISE, shape.Height * COMPRESS_PRECISE)
			Set added = in_slide.Shapes.AddPicture( _
				tmpPath, msoFalse, msoTrue, shape.Left, shape.Top, shape.Width, shape.Height)
			Call shape.Delete()
		End If
	Next i
End Sub

Sub main()
	Dim i As Long,  j As Long
	For i = ActivePresentation.Slides.Count To 1 Step -1
		Dim slide As Slide
		Set slide = ActivePresentation.Slides(i)
		If slide.SlideShowTransition.Hidden Then
			Call slide.Delete()
		Else
			For j = slide.Shapes.Count To 1 Step -1
				Call ungroup(slide.Shapes(j))
			Next j
			Call handleMedias(slide)
		End If
	Next i
End Sub
